---
- name: Install Packages
  ansible.builtin.package:
    name: "nginx"
    state: present
- name: Enable httpd_read_user_content
  ansible.posix.seboolean:
    name: httpd_read_user_content
    persistent: true
    state: true
- name: Enable httpd_enable_homedirs
  ansible.posix.seboolean:
    name: httpd_enable_homedirs
    persistent: true
    state: true
- name: Start nginx
  ansible.builtin.service:
    name: nginx
    state: started
    enabled: true
- name: Install nginx.conf
  ansible.builtin.copy:
    src: config/nginx.conf
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root
    mode: "0644"
  notify: restart nginx
- name: Copy redirect http config to nginx
  ansible.builtin.copy:
    src: "config/sites/http-redirect.conf"
    dest: "/etc/nginx/conf.d/http-redirect.conf"
    owner: root
    group: root
    mode: "0644"
  notify: restart nginx
- name: Copy ip redirect config to nginx
  ansible.builtin.copy:
    src: "config/sites/ip-redirect.conf"
    dest: "/etc/nginx/conf.d/ip-redirect.conf"
    owner: root
    group: root
    mode: "0644"
  notify: restart nginx
- name: Create well-known folder for certbot
  ansible.builtin.file:
    path: /var/www/acme-challenge
    state: directory
    owner: root
    group: root
    mode: "0755"
    setype: httpd_sys_content_t
- name: Restart nginx now, if needed
  ansible.builtin.meta: flush_handlers
- name: Install nginx restart deploy-hook for certbot
  ansible.builtin.copy:
    dest: /etc/letsencrypt/renewal-hooks/deploy/nginx
    mode: "0755"
    owner: root
    group: root
    content: |
      #!/bin/sh
      /bin/systemctl restart nginx
